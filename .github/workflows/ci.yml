name: CI/CD Workflow

on: 
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  frontend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Instalar dependencias
        run: npm install

      - name: Run tests with coverage (Vitest)
        run: npx vitest run --coverage 

      - name: Upload coverage report frontend
        uses: actions/upload-artifact@v4
        with:
          name: coverage-frontend
          path: frontend/coverage

  deploy-prod:
    needs: frontend-tests
    if: github.ref == 'refs/heads/main' && needs.frontend-tests.result == 'success'
    runs-on: ubuntu-latest
    environment: Production  # ‚Üê ¬°DEBE ser "Production"!
    name: Deploy to Production
    
    steps:
      - name: Verificar secret
        run: |
          echo "Verificando secret..."
          echo "Environment: Production"
          echo "Secret name: VERCEL_HOOK_PROD"
          
      - name: Trigger Vercel Deployment
        run: |
          echo "üöÄ Triggering deploy..."
          response=$(curl -s -w "%{http_code}" -X POST "${{ secrets.VERCEL_HOOK_PROD }}")
          echo "Response: HTTP $response"
          if [ "$response" -ne 200 ]; then
            echo "Deployment trigger failed with status $response"
            exit 1
      - name: Debug - Ver informaci√≥n
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Test result: ${{ needs.frontend-tests.result }}"
          echo "Secret exists: ${{ secrets.VERCEL_HOOK_PROD != '' }}"