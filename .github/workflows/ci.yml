name: CI/CD Workflow

on: 
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  frontend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Instalar dependencias
        run: npm install

      - name: Run tests with coverage (Vitest)
        run: npx vitest run --coverage 

      - name: Upload coverage report frontend
        uses: actions/upload-artifact@v4
        with:
          name: coverage-frontend
          path: frontend/coverage

  # Job de despliegue en producciÃ³n (solo se ejecuta despuÃ©s de tests exitosos)
  deploy-prod:
    needs: frontend-tests
    if: github.ref == 'refs/heads/main' && success()
    runs-on: ubuntu-latest
    environment: Production  # Referencia al entorno de GitHub
    name: Deploy to Production
    
    steps:
      - name: Trigger Vercel Deployment
        run: |
          echo "ðŸš€ Desencadenando despliegue en Vercel..."
          curl -s -X POST "${{ secrets.VERCEL_HOOK_PROD }}"
          echo "âœ… Solicitud de despliegue enviada correctamente"